{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","className","type","placeholder","required","onChange","e","updateImput","target","onClick","addItem","disabled","length","map","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OA8EeA,E,kDA1Eb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTC,QAAS,GACTC,KAAM,IAJQ,E,2CAQlB,SAAQC,GACN,GAAgB,KAAbA,EAAgB,CACjB,IAAMF,EAAQ,CACZG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJN,EAAI,YAAMO,KAAKT,MAAME,MAC3BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAMf,SAAWG,GACT,IACMQ,EADI,YAAMH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAIA,EAAKV,KAAMA,KAClDK,KAAKE,SAAS,CAACT,KAAMU,M,yBAGvB,SAAYG,GACVN,KAAKE,SAAS,CAACV,QAASc,M,oBAG1B,WAAS,IAAD,OACN,OACE,sBAAKC,UAAU,OAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,sBAAKA,UAAU,YAAf,0BAEE,uBACA,uBAAOC,KAAK,OAAOD,UAAU,aAAaE,YAAY,eAAeC,UAAQ,EAACZ,MAAOE,KAAKT,MAAMC,QAChGmB,SAAU,SAAAC,GAAC,OAAI,EAAKC,YAAYD,EAAEE,OAAOhB,UACzC,wBAAQS,UAAU,SAASQ,QAAS,kBAAK,EAAKC,QAAQ,EAAKzB,MAAMC,UAAUyB,UAAWjB,KAAKT,MAAMC,QAAQ0B,OAAzG,sBAEA,+BACClB,KAAKT,MAAME,KAAK0B,KAAI,SAACd,GACpB,OACE,qBAAKE,UAAU,UAAf,SACA,+BAECF,EAAKP,MACN,wBAAQS,UAAU,MAAMQ,QAAS,kBAAI,EAAKK,WAAWf,EAAKV,KAA1D,sBAHSU,EAAKV,SASlB,qBAAKY,UAAU,UAAf,SAAyB,8CAErB,wBAAQA,UAAU,MAAlB,sC,GA/DIc,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.4bd81a69.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state={\n      newItem: \"\",\n      list: []\n    }\n  };\n\n  addItem(todoValue){\n    if(todoValue!== \"\"){\n      const newItem={\n        id: Date.now(),\n        value: todoValue,\n        isDone: false,\n      };\n      const list =[...this.state.list];\n      list.push(newItem);\n\n      this.setState({\n        list,\n        newItem: \"\"\n      })\n\n    }\n\n  }\n  deleteItem(id){\n    const list =[...this.state.list];\n    const updatedlist =list.filter(item => item.id !==id);\n    this.setState({list: updatedlist})\n  }\n\n  updateImput(input){\n    this.setState({newItem: input});\n  }\n\n  render(){\n    return(\n      <div className=\"todo\">\n        <h1 className=\"appName\">Todo List</h1>\n        <div className=\"container\">\n          Add an item..\n          <br />\n          <input type=\"text\" className=\"input-text\" placeholder=\"Write a Todo\" required value={this.state.newItem}\n          onChange={e => this.updateImput(e.target.value)} />\n          <button className=\"addBtn\" onClick={()=> this.addItem(this.state.newItem)} disabled={!this.state.newItem.length}>\n          Add TODO</button>\n          <ul>\n          {this.state.list.map((item)=>{\n            return(\n              <div className=\"todoDis\">\n              <li key={item.id}>\n              \n              {item.value}\n              <button className=\"btn\" onClick={()=>this.deleteItem(item.id)}>Delete</button>\n            </li>\n              </div>\n             \n            );\n          })}\n          <div className=\"todoDis\"><li>\n              Record Vidos\n              <button className=\"btn\">Delete</button>\n            </li></div>\n            \n          </ul>\n        </div>\n\n\n      </div>\n    ); \n  };\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}