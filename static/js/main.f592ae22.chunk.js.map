{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","newItem","list","todoValue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","className","type","placeholder","required","onChange","e","updateImput","target","Button","variant","onClick","addItem","disabled","length","map","Modal","Dialog","Body","Footer","deleteItem","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQA+FeA,E,kDAzFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,KAAM,IAJS,E,2CAQnB,SAAQC,GACN,GAAkB,KAAdA,EAAkB,CACpB,IAAMF,EAAU,CACdG,GAAIC,KAAKC,MACTC,MAAOJ,EACPK,QAAQ,GAEJN,EAAI,YAAOO,KAAKT,MAAME,MAC5BA,EAAKQ,KAAKT,GAEVQ,KAAKE,SAAS,CACZT,OACAD,QAAS,Q,wBAIf,SAAWG,GACT,IACMQ,EADI,YAAOH,KAAKT,MAAME,MACHW,QAAO,SAACC,GAAD,OAAUA,EAAKV,KAAOA,KACtDK,KAAKE,SAAS,CAAET,KAAMU,M,yBAGxB,SAAYG,GACVN,KAAKE,SAAS,CAAEV,QAASc,M,oBAG3B,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,UAAd,uBACA,iDACA,uBACA,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,aAAf,UACE,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,eACZC,UAAQ,EACRZ,MAAOE,KAAKT,MAAMC,QAClBmB,SAAU,SAACC,GAAD,OAAO,EAAKC,YAAYD,EAAEE,OAAOhB,UAE7C,cAACiB,EAAA,EAAD,CACEC,QAAQ,UACRT,UAAU,SACVU,QAAS,kBAAM,EAAKC,QAAQ,EAAK3B,MAAMC,UACvC2B,UAAWnB,KAAKT,MAAMC,QAAQ4B,OAJhC,2BAUJ,qBAAKb,UAAU,MAAf,SACKP,KAAKT,MAAME,KAAK4B,KAAI,SAAChB,GACpB,OACE,qBAAKE,UAAU,kBAAf,SAEA,eAACe,EAAA,EAAMC,OAAP,WACE,cAACD,EAAA,EAAME,KAAP,UACE,4BAAInB,EAAKP,UAGX,cAACwB,EAAA,EAAMG,OAAP,UACE,cAACV,EAAA,EAAD,CACEC,QAAQ,iBACRT,UAAU,MACVU,QAAS,kBAAM,EAAKS,WAAWrB,EAAKV,KAHtC,wBANeU,EAAKV,kB,GAlEtBgC,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f592ae22.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      newItem: \"\",\r\n      list: [],\r\n    };\r\n  }\r\n\r\n  addItem(todoValue) {\r\n    if (todoValue !== \"\") {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        value: todoValue,\r\n        isDone: false,\r\n      };\r\n      const list = [...this.state.list];\r\n      list.push(newItem);\r\n\r\n      this.setState({\r\n        list,\r\n        newItem: \"\",\r\n      });\r\n    }\r\n  }\r\n  deleteItem(id) {\r\n    const list = [...this.state.list];\r\n    const updatedlist = list.filter((item) => item.id !== id);\r\n    this.setState({ list: updatedlist });\r\n  }\r\n\r\n  updateImput(input) {\r\n    this.setState({ newItem: input });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"appName\">Todo List</h1>\r\n        <span>Add an item..</span>\r\n        <br />\r\n        <div className=\"row\">\r\n          <div className=\"col-12 top\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"input-text\"\r\n              placeholder=\"Write a Todo\"\r\n              required\r\n              value={this.state.newItem}\r\n              onChange={(e) => this.updateImput(e.target.value)}\r\n            />\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"addBtn\"\r\n              onClick={() => this.addItem(this.state.newItem)}\r\n              disabled={!this.state.newItem.length}\r\n            >\r\n              Add TODO\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n            {this.state.list.map((item) => {\r\n              return (\r\n                <div className=\"col-12 col-md-6\">\r\n\r\n                <Modal.Dialog key={item.id}>\r\n                  <Modal.Body>\r\n                    <p>{item.value}</p>\r\n                  </Modal.Body>\r\n\r\n                  <Modal.Footer>\r\n                    <Button\r\n                      variant=\"outline-danger\"\r\n                      className=\"btn\"\r\n                      onClick={() => this.deleteItem(item.id)}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </Modal.Footer>\r\n                </Modal.Dialog>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}